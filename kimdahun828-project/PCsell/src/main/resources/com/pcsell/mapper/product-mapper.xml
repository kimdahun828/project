<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pcsell.mapper.ProductMapper">

     <sql id="productListColumns">
			PCCODE, NAME, DIVISION, COMPANYNAME, GENERATION, CORE, THREAD, CAPACITY, CLOCK, CHIPSET, SOCKET, INTERFACE, BUFFER, TYPE, OUTPUT, PRICE, COUNT, CATEGORY
	</sql>

	<insert id="insertProduct"
			parameterType="Product"
			useGeneratedKeys="true"
			keyColumn="pcCode"
			keyProperty="pcCode">
		INSERT INTO PRODUCT (
			PCCODE
			, NAME
			, DIVISION
			, COMPANYNAME
			, GENERATION
			, CORE
			, THREAD
			, CAPACITY
			, CLOCK
			, CHIPSET
			, SOCKET
			, INTERFACE
			, BUFFER
			, TYPE
			, OUTPUT
			, PRICE
			, COUNT
			, CATEGORY
		)
		VALUES (
			SYS_GUID()
			, #{ name }
			, #{ division }
			, #{ companyName }
			, #{ generation }
			, #{ core }
			, #{ thread }
			, #{ capacity }
			, #{ clock }
			, #{ chipSet }
			, #{ socket }
			, #{ Interface }
			, #{ buffer }
			, #{ type }
			, #{ outPut }
			, #{ price }
			, #{ count }
			, #{ category }
		)
	</insert>


	<insert id="insertProductImage" parameterType="Photo">
		INSERT INTO PHOTO (
			PCCODE
			, USERFILENAME
			, SAVEDFILENAME
		)
		VALUES (
			#{ pcCode }
			, #{ userFileName }
			, #{ savedFileName }
		)
	</insert>
	
	<select id="dramList" resultType="Product">
		SELECT pcCode, name, price
		FROM product
		WHERE category = 'RAM'
	</select>
	
	<select id="dramFileList" parameterType="String" resultType="Photo">
		SELECT pcCode, userFileName, savedFileName
		FROM photo
		WHERE pcCode = #{pcCode}
	</select>
	
	<select id="dramDetailList" parameterType="String" resultType="Product">
		SELECT pcCode, name, price
		FROM product
		WHERE category = 'RAM'	and pcCode = #{pcCode}
	</select>
	
	<select id="dramDetailFileListByPcCode" parameterType="Product" resultType="Photo">
		SELECT pcCode, userFileName, savedFileName
		FROM photo
		WHERE pcCode = #{pcCode}
	</select>

	<select id="search" parameterType="hashmap" resultType="Product">
		SELECT pcCode, name, price
		FROM product
		WHERE UPPER(name) like '%'||UPPER(#{ name })||'%' and category = #{category}
	</select>

	<select id="searchFileListByPcCode" parameterType="hashmap" resultType="Photo">
		SELECT pcCode, userFileName, savedFileName
		FROM photo
		WHERE pcCode in (SELECT pcCode FROM product WHERE category like #{ category } and UPPER(name) like '%'|| upper(#{ name }) ||'%')
	</select>
	
	<select id="findMemoryList" parameterType="hashmap" resultType="Product">
		SELECT * from 
			(SELECT pcCode, name, price, rownum as rnum
			FROM product
			WHERE category like '%'||#{ category }||'%'
			ORDER by pcCode desc)
        WHERE rnum between #{ startList } and #{ endList }
     </select>
     
     <select id="findMemoryListCnt" parameterType="hashmap" resultType="int">
		SELECT count(*) as listCnt
		FROM product
		where category like '%'||#{ category }||'%'
	</select>


	<select id="selectProduct" resultType="Product">
		SELECT PCCODE, NAME, CATEGORY, PRICE
		FROM PRODUCT
		ORDER BY CATEGORY DESC
	</select>

	<select id="selectCPU" resultType="Product">
		SELECT PCCODE, NAME, CATEGORY, PRICE
		FROM PRODUCT
		WHERE CATEGORY = 'CPU'
		ORDER BY CATEGORY DESC
	</select>
	
	<select id="selectMainBoard" resultType="Product">
		SELECT PCCODE, NAME, CATEGORY, PRICE
		FROM PRODUCT
		WHERE CATEGORY = 'MainBoard'
		ORDER BY CATEGORY DESC
	</select>

	<select id="selectVGA" resultType="Product">
		SELECT PCCODE, NAME, CATEGORY, PRICE
		FROM PRODUCT
		WHERE CATEGORY = 'VGA'
		ORDER BY CATEGORY DESC
	</select>

	<select id="selectProductImageByPcCode" parameterType="String" resultType="Photo">
		SELECT PCCODE, USERFILENAME, SAVEDFILENAME
		FROM PHOTO
		WHERE pcCode = #{ pcCode }
	</select>
	
	<select id="selectProductImageBySavedFileName" parameterType="String" resultType="Photo">
		SELECT PCCODE, USERFILENAME, SAVEDFILENAME
		FROM PHOTO
		WHERE SAVEDFILENAME = #{ savedFileName }
	</select>

	<select id="findProductImageByPcCode" parameterType="String" resultType="Photo">
		SELECT PCCODE, USERFILENAME, SAVEDFILENAME
		FROM PHOTO
		WHERE PCCODE = #{ pcCode }	
	</select>
	
	<select id="selectProductByCategory" 
			resultType="Product">
		SELECT pcCode, name, category, price
		FROM PRODUCT
		WHERE category = #{ category }
		ORDER BY category DESC
	</select>

	<select id="selectProductByPcCode" parameterType="String" resultType="Product">
		SELECT PCCODE, NAME, CATEGORY, DIVISION, COMPANYNAME, GENERATION, CORE, THREAD, CAPACITY, CLOCK, CHIPSET, SOCKET, INTERFACETYPE, BUFFER, TYPE, OUTPUT, PRICE, COUNT
		FROM PRODUCT
		WHERE PCCODE = #{ pcCode }
	</select>

	<update id="updateProduct" parameterType="Product">
		UPDATE PRODUCT
		SET NAME = #{ name },
			DIVISION = #{ division },
			COMPANYNAME = #{ companyName },
			GENERATION = #{ generation },
			CORE = #{ core },
			THREAD = #{ thread },
			CAPACITY = #{ capacity },
			CLOCK = #{ clock },
			CHIPSET = #{ chipSet },
			SOCKET = #{ socket },
			INTERFACETYPE = #{ interfaceType },
			BUFFER = #{ buffer },
			TYPE = #{ type },
			OUTPUT = #{ outPut },
			PRICE = #{ price },
			COUNT = #{ count },
			CATEGORY = #{ category }
		WHERE PCCODE = #{ pcCode }
	</update>
	
	<delete id="deleteProduct" parameterType="String">
		DELETE FROM PRODUCT
		WHERE PCCODE = #{ pcCode }
	</delete>
	
	<delete id="deleteProductImage" parameterType="String">
		DELETE FROM PHOTO
		WHERE pcCode = #{ pcCode }
	</delete>
	
	<select id="selectProductWithPaging" parameterType="hashmap" resultType="Product">
		SELECT s2.*
		FROM
		(
			SELECT
				rownum idx,
				s.*
			FROM
			(
				SELECT PCCODE, NAME, CATEGORY, PRICE
				FROM PRODUCT
				ORDER BY CATEGORY DESC	
			) s
		) s2
		WHERE s2.idx >= #{ from } AND s2.idx <![CDATA[<]]> #{ to }
	</select>
	
	<select id="selectProductCount" resultType="int">
		SELECT count(*)
		FROM PRODUCT
	</select>

	<select id="searchProductByName"
			parameterType="String" resultType="Product">
		SELECT PCCODE, NAME, CATEGORY, PRICE
		FROM PRODUCT
		WHERE UPPER(NAME) LIKE UPPER(#{ search })
		ADN CATEGORY=${ category }
	</select>

</mapper>